package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.event.EventTarget
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.minecraft.network.play.client.CPacketConfirmTransaction
import net.minecraft.network.play.server.SPacketConfirmTransaction
import net.minecraft.network.play.server.SPacketPlayerPosLook
import java.util.concurrent.LinkedBlockingQueue

@ModuleInfo(name = "HytDeathDisabler", description = "先紫砂一遍,复活后就可以fly一会了", category = ModuleCategory.EXPLOIT)
class HytDeathDisabler: Module() {
    private val packets = LinkedBlockingQueue<SPacketConfirmTransaction>()
    private var delay = false
    override fun onEnable() { }
    override fun onDisable() {
        delay = false
        while (!packets.isEmpty()){
            mc.connection!!.handleConfirmTransaction(packets.take())
        }
    }
    @EventTarget
    fun onPacket(event:PacketEvent){
        if(event.packet is SPacketPlayerPosLook){
            if(mc.player.capabilities.isFlying && !delay){
                delay = true
            }
        }
        if (delay) {
            if (event.packet is SPacketConfirmTransaction) {
                packets.add(event.packet)
                event.cancelEvent()
                mc.connection!!.sendPacket(CPacketConfirmTransaction())
            }
        }
    }
}