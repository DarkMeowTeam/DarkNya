package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.DarkNya
import net.ccbluex.liquidbounce.event.EventTarget
import net.ccbluex.liquidbounce.event.MoveEvent
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.features.module.modules.combat.KillAura
import net.ccbluex.liquidbounce.features.module.modules.combat.SuperKnockback
import net.ccbluex.liquidbounce.features.value.BoolValue
import net.ccbluex.liquidbounce.features.value.FloatValue
import net.minecraft.network.play.client.CPacketPlayer

/**
 * Skid or Made By WaWa
 * @date 2023/6/22 14:37
 * @author WaWa
 */
@ModuleInfo(name = "CancelC03", description = "By WaWa", category = ModuleCategory.EXPLOIT)
class CancelC03 : Module(){
    val isSetRange = BoolValue("SetKillAuraRange",false)
    val rangeValue = FloatValue("Range",5F,0F,7F)
    val isSetMulti = BoolValue("SetKillAuraMulti",false)
    val isSetFov = BoolValue("SetKillAuraFOV",false)
    val isSetOnlyM = BoolValue("SetSkbOnlyMove",false)
    val isSetOnlyG = BoolValue("SetSkbOnlyGround",false)

    var range = 0F
    var fov = 0F
    var airbypass = false
    var multi = ""
    var skbOnlyMove = false
    var skbOnlyGround = false

    override fun onEnable() {
        range = 0F
        fov = 0F
        airbypass = false
        multi = ""
        skbOnlyMove = false
        skbOnlyGround = false
        range = (DarkNya.moduleManager[KillAura::class.java] as KillAura).range
        airbypass = (DarkNya.moduleManager[KillAura::class.java] as KillAura).airBypass.get()
        fov = (DarkNya.moduleManager[KillAura::class.java] as KillAura).fovValue.get()
        multi = (DarkNya.moduleManager[KillAura::class.java] as KillAura).targetModeValue.get()

        skbOnlyMove = (DarkNya.moduleManager[SuperKnockback::class.java] as SuperKnockback).onlyMoveValue.get()
        skbOnlyGround = (DarkNya.moduleManager[SuperKnockback::class.java] as SuperKnockback).onlyGroundValue.get()

        (DarkNya.moduleManager[KillAura::class.java] as KillAura).airBypass.set(false)
    }

    override fun onDisable() {
        (DarkNya.moduleManager[KillAura::class.java] as KillAura).range = range
        (DarkNya.moduleManager[KillAura::class.java] as KillAura).airBypass.set(airbypass)
        (DarkNya.moduleManager[KillAura::class.java] as KillAura).fovValue.set(fov)
        (DarkNya.moduleManager[KillAura::class.java] as KillAura).targetModeValue.set(multi)

        (DarkNya.moduleManager[SuperKnockback::class.java] as SuperKnockback).onlyGroundValue.set(skbOnlyGround)
        (DarkNya.moduleManager[SuperKnockback::class.java] as SuperKnockback).onlyMoveValue.set(skbOnlyMove)
        range = 0F
        airbypass = false
        fov = 0F
        multi = ""
    }

    @EventTarget
    fun onUpdate(event: UpdateEvent){
        if (isSetRange.get() && (DarkNya.moduleManager[KillAura::class.java] as KillAura).range != rangeValue.get())
                (DarkNya.moduleManager[KillAura::class.java] as KillAura).range = rangeValue.get()

        if (isSetMulti.get() && (DarkNya.moduleManager[KillAura::class.java] as KillAura).targetModeValue.get() != "Multi")
                (DarkNya.moduleManager[KillAura::class.java] as KillAura).targetModeValue.set("Multi")

        if (isSetFov.get() && (DarkNya.moduleManager[KillAura::class.java] as KillAura).fovValue.get() != 360f)
                (DarkNya.moduleManager[KillAura::class.java] as KillAura).fovValue.set(360f)

        if (isSetOnlyG.get() && (DarkNya.moduleManager[SuperKnockback::class.java] as SuperKnockback).onlyGroundValue.get())
                (DarkNya.moduleManager[SuperKnockback::class.java] as SuperKnockback).onlyGroundValue.set(false)

        if (isSetOnlyM.get() && (DarkNya.moduleManager[SuperKnockback::class.java] as SuperKnockback).onlyMoveValue.get())
                (DarkNya.moduleManager[SuperKnockback::class.java] as SuperKnockback).onlyMoveValue.set(false)
    }
    @EventTarget
    fun onPacket(event: PacketEvent){
        val packet = event.packet
        if (packet is CPacketPlayer){
            event.cancelEvent()
        }
    }
    @EventTarget
    fun onMove(event: MoveEvent){
        event.zero()
    }
    override val tag: String
        get() = "GrimAC"
}